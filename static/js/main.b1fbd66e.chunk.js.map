{"version":3,"sources":["product/Card.js","App.js","serviceWorker.js","index.js"],"names":["Card","props","state","name","price","furniture_style","description","delivery_time","className","this","map","item","key","Component","App","options_style","label","value","options_time","source_data_products","furniture_styles","products","filterList","bind","e","keysearch","target","toLowerCase","setState","productfiltered","filter","el","search","fetch","then","res","json","data","catch","console","log","type","placeholder","aria-label","onChange","options","product","i","href","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.b1fbd66e.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nclass Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name : this.props.name,\r\n            price :this.props.price,\r\n            furniture_style: this.props.furniture_style,\r\n            description:this.props.description,\r\n            delivery_time:this.props.delivery_time\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title font-weight-bold\">{this.state.name}</h5>\r\n                    <p className=\"card-text text-warning text-right font-weight-bold\">\r\n                        Price: ${this.state.price}\r\n\r\n                    </p>\r\n\r\n                    <p className=\"card-text\">{this.state.description}</p>\r\n                    <br/>\r\n                    <p className=\"text-primary\">Furniture Style</p>\r\n                    <ul>\r\n                        {this.state.furniture_style.map(item => {\r\n                            return <li key={item}> {item}</li>\r\n                        })}\r\n                    </ul>\r\n                    <p className=\"card-text text-right text-primary font-weight-bold\">Delivery days: {this.state.delivery_time} days\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Card;","import React, {Component} from 'react';\nimport Card from \"./product/Card\";\nimport Select from 'react-select'\nimport ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            source_data_products : [],\n            furniture_styles: [],\n            products: [],\n        }\n\n\n    }\n\n\n    //criteria filtering furniture style\n    options_style = [\n        {label: 'Classic ', value:\"Classic\" },\n        {label: 'Midcentury', value: \"Midcentury\"},\n        {label: 'Scandinavian', value: \"Scandinavian\"},\n        {label: 'Modern', value: \"Modern\"},\n        {label: 'Contemporary', value: \"Contemporary\"},\n    ];\n\n    //criteria Filtering delivery time\n    options_time = [\n        {value: '7', label: '1 week'},\n        {value: '14', label: '2 week'},\n        {value: '31', label: '1 month'},\n        {value: '32', label: 'more '}\n    ]\n\n    componentWillUpdate(){\n\n        this.filterList = this.filterList.bind(this);\n    }\n\n    //filter event\n    filterList(e) {\n\n        let products = this.state.source_data_products;\n        let keysearch = e.target.value.toLowerCase();\n\n        this.setState({\n            products: this.state.source_data_products,\n        });\n        var productfiltered=[];\n         productfiltered = products.filter(function (el) {\n            return el.name.toLowerCase().search(keysearch) !== -1\n        });\n\n        this.setState({\n            products: productfiltered,\n        });\n\n    }\n\n    componentDidMount() {\n\n        fetch('https://www.mocky.io/v2/5c9105cb330000112b649af8')\n            .then(res => res.json())\n            .then((data) => {\n                this.setState({\n                    furniture_styles: data.furniture_styles,\n                    products: data.products,\n                    source_data_products: data.products,\n                })\n            })\n            .catch(console.log)\n\n    }\n\n\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                <div className=\"jumbotron bg-primary\">\n                    <h3 className=\"text-warning font-italic\">Fabelio E-Coomerce</h3>\n                    <span className=\"row\">\n                        <span className=\"col-md-4\">\n                            <input className=\"form-control\" type=\"search\" placeholder=\"Search Furniture\"\n                                   aria-label=\"Search\" onChange={this.filterList}/>\n                        </span>\n                    </span>\n                    <br/>\n                    <span className=\"row\">\n                        <span className=\"col-md-6\">\n                            <ReactMultiSelectCheckboxes  options={this.options_style}/>\n\n                        </span>\n                        <span className=\"col-md-2\"></span>\n                        <span className=\"col-md-4 pull-right\">\n                            <Select placeholder=\"Delivery Time\" options={this.options_time}/>\n                        </span>\n                    </span>\n\n                </div>\n\n\n                <div className=\"card-deck\">\n                    {\n                        this.state.products.map((product, i) => (\n                            <div key={i} className=\"col-md-4\">\n                                <Card furniture_style={product.furniture_style} name={product.name}\n                                      price={product.price} delivery_time={product.delivery_time}\n                                      description={product.description}/><br/>\n                            </div>\n                        ))\n                    }\n                </div>\n\n\n                <footer className=\"page-footer font-small bg-primary blue\">\n\n                    <div className=\"footer-copyright text-center py-3\"><p className=\"text-warning\"> Â© 2020 Copyright:\n                        <a href=\"#\" className=\"text-warning\"> <br/> Ade Pamungkas</a></p>\n                    </div>\n\n\n                </footer>\n            </div>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}