{"version":3,"sources":["product/Card.js","App.js","serviceWorker.js","index.js"],"names":["Card","props","state","name","price","furniture_style","description","delivery_time","className","this","map","item","key","Component","options_time","value","label","options_style","App","filterStyle","selectedStyle","setState","console","log","filterTime","selectedTime","productfiltered","products","source_data_products","days","filter","el","arrLength","length","day","i","furniture_styles","filterList","bind","e","keysearch","target","toLowerCase","search","fetch","then","res","json","data","catch","type","placeholder","aria-label","onChange","options","product","href","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.476c7fc2.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nclass Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name : this.props.name,\r\n            price :this.props.price,\r\n            furniture_style: this.props.furniture_style,\r\n            description:this.props.description,\r\n            delivery_time:this.props.delivery_time\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title font-weight-bold\">{this.props.name}</h5>\r\n                    <p className=\"card-text text-warning text-right font-weight-bold\">\r\n                        Price: ${this.props.price}\r\n\r\n                    </p>\r\n\r\n                    <p className=\"card-text\">{this.props.description}</p>\r\n                    <br/>\r\n                    <p className=\"text-primary\">Furniture Style</p>\r\n                    <ul>\r\n                        {this.props.furniture_style.map(item => {\r\n                            return <li key={item}> {item}</li>\r\n                        })}\r\n                    </ul>\r\n                    <p className=\"card-text text-right text-primary font-weight-bold\">Delivery days: {this.props.delivery_time} days\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Card;","import React, {Component} from 'react';\nimport Card from \"./product/Card\";\nimport Select from 'react-select'\nimport ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\n\n//criteria Filtering delivery time\nconst options_time = [\n    {value: '7', label: '1 week'},\n    {value: '14', label: '2 week'},\n    {value: '21', label: '3 week'},\n    {value: '28', label: '4 week'},\n    {value: '29', label: 'more '}\n];\n\n//criteria filtering furniture style\nconst options_style = [\n    {label: 'Classic ', value: \"Classic\"},\n    {label: 'Midcentury', value: \"Midcentury\"},\n    {label: 'Scandinavian', value: \"Scandinavian\"},\n    {label: 'Modern', value: \"Modern\"},\n    {label: 'Contemporary', value: \"Contemporary\"},\n];\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            source_data_products: [],\n            furniture_styles: [],\n            products: [],\n            selectedTime: null,\n            selectedStyle: null,\n        }\n\n        this.filterList = this.filterList.bind(this);\n        // this.filterSelect = this.filterStyle.bind(this);\n    }\n\n    filterStyle = (selectedStyle) => {\n        this.setState({selectedStyle});\n        console.log(selectedStyle.value);\n    }\n\n    filterTime = selectedTime => {\n        this.setState({selectedTime});\n        console.log(`Option selected:`, selectedTime.value);\n\n        let products = this.state.source_data_products;\n        let keysearch = 0;\n\n        var productfiltered = [];\n\n        var days = [];\n        if (selectedTime.value >= 1 && selectedTime.value <= 7) {\n            days = [1, 2, 3, 4, 5, 6, 7]\n        } else if (selectedTime.value >= 7 && selectedTime.value <= 14) {\n            days = [8, 9, 10, 11, 12, 13, 14]\n        } else if (selectedTime.value >= 14 && selectedTime.value <= 21) {\n            days = [15, 16, 17, 18, 19, 20, 21]\n        } else if (selectedTime.value >= 21 && selectedTime.value <= 28) {\n            days = [22, 23, 24, 25, 26, 27, 28]\n        } else if (selectedTime.value >= 28) {\n            days = [29, 30, 31]\n        }\n\n        console.log(days)\n\n        productfiltered = products.filter(function (el) {\n            let arrLength = days.length;\n            var day = 0;\n            for (let i = 0; i < arrLength; i++) {\n                if (days[i] === el.delivery_time) {\n                    day = el.delivery_time;\n                }\n            }\n            console.log(day)\n            return el.delivery_time === day;\n\n        });\n        //console.log(productfiltered)\n        this.setState({\n            products: productfiltered,\n        });\n    };\n\n\n    //filter event\n    filterList(e) {\n        let products = this.state.source_data_products;\n        let keysearch = e.target.value.toLowerCase();\n\n        console.log(this.state.products)\n        var productfiltered = [];\n        productfiltered = products.filter(function (el) {\n            return el.name.toLowerCase().search(keysearch) !== -1\n        });\n        console.log(productfiltered)\n        this.setState({\n            products: productfiltered,\n        });\n\n    }\n\n    componentDidMount() {\n\n        fetch('https://www.mocky.io/v2/5c9105cb330000112b649af8')\n            .then(res => res.json())\n            .then((data) => {\n                this.setState({\n                    furniture_styles: data.furniture_styles,\n                    products: data.products,\n                    source_data_products: data.products,\n                })\n            })\n            .catch(console.log)\n\n    }\n\n\n    render() {\n        const {selectedTime} = this.state;\n        const {selectedStyle} = this.state;\n        return (\n            <div className=\"container\">\n                <div className=\"jumbotron bg-primary\">\n                    <h3 className=\"text-warning font-italic\">Katalog product</h3>\n                    <span className=\"row\">\n                        <span className=\"col-md-4\">\n                            <input className=\"form-control\" type=\"search\" placeholder=\"Search Furniture\"\n                                   aria-label=\"Search\" onChange={this.filterList}/>\n                        </span>\n                    </span>\n                    <br/>\n                    <span className=\"row\">\n                        <span className=\"col-md-6\">\n                            <ReactMultiSelectCheckboxes value={selectedStyle} options={options_style}\n                                                        onChange={this.filterStyle}/>\n\n                        </span>\n                        <span className=\"col-md-2\"></span>\n                        <span className=\"col-md-4 pull-right\">\n                            <Select placeholder=\"Delivery Time\" value={selectedTime}\n                                    onChange={this.filterTime}\n                                    options={options_time}/>\n                        </span>\n                    </span>\n\n                </div>\n\n\n                <div className=\"card-deck\">\n                    {\n                        this.state.products.map((product, i) => (\n                            <div key={i} className=\"col-md-4\">\n                                <Card furniture_style={product.furniture_style} name={product.name}\n                                      price={product.price} delivery_time={product.delivery_time}\n                                      description={product.description}/><br/>\n                            </div>\n                        ))\n                    }\n                </div>\n\n\n                <footer className=\"page-footer font-small bg-primary blue\">\n\n                    <div className=\"footer-copyright text-center py-3\"><p className=\"text-warning\"> © 2020 Copyright:\n                        <a href=\"#\" className=\"text-warning\"> <br/> Ade Pamungkas</a></p>\n                    </div>\n\n\n                </footer>\n            </div>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}